<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kkumtree</title>
    <link>https://blog.minseong.xyz/post/</link>
    <description>Recent content in Posts on kkumtree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 04 Jun 2023 09:15:14 +0900</lastBuildDate><atom:link href="https://blog.minseong.xyz/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>gh-pages에 댓글 기능 추가하기(giscus/Hugo)</title>
      <link>https://blog.minseong.xyz/post/how-to-add-comment-section-in-gh-pages/</link>
      <pubDate>Sun, 04 Jun 2023 09:15:14 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/how-to-add-comment-section-in-gh-pages/</guid>
      <description>요약 앞으로 가감없는 피드백 환영합니다. https://github.com/kkumtree/blog.minseong.xyz/commit/e17822e72e8d357dcdbda1025c5372161a7b93ff
배경 gh-pages로 블로그를 구축해서, 첫 게시물을 올린 지 만 4개월이 지났다.
구축기는 나중에 올려야지.
급히 벤치마킹해서 올린거라, 부족한 점은 많지만 가장 중요한 댓글 기능이 없어서 아쉬웠다.
원래는 댓글을 달지 않으려고 했는데,
부족한 부분에 대해서 조언도 받아보고 싶고 추가로 궁금한 점이나 이해가 안되는 부분에 대해서 피드백도 받고 싶었다. 다른 블로그에서 답을 찾으려고 검색엔진을 돌리면, 뭔가 2% 부족하거나 / 내가 원하는 해답이 아니거나 / 매번 이모티콘으로 끝나는 특유의 허탈감으로 짜증이 밀려와서 번역기 돌려가며 국외 포스트나 문서를 보다보니, 반대로 내 글도 큰 도움이 되지 못할 경우도 있겠다 싶었다.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 6주차 - Security</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week6/</link>
      <pubDate>Sun, 04 Jun 2023 06:56:52 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week6/</guid>
      <description>이번에는 인증 및 인가, 그리고 IRSA를 중심으로 EKS의 보안에 대해 학습해보았습니다.
kops 스터디 때에는 잘 몰랐는데, 복기하다보니 RBAC은 기본으로 깔고..
[4-1] projected Volume [4-2] AWS Load Balancer Controller IRSA 및 LB Pod mutating 위의 두 가지가 꽤나 중요한 파트를 차지하고 있었음을 알 수 있었습니다.
Network(2주차)가 매번 뭔가 일부가 아리송하였다면
Security는 복기하다가 이론적으로는 간단(과연 ?)해보여도,
실제 구동방식 이해 자체가 초반에 안되서 더 어려웠던 것 같습니다.
그 외 myeks-bastion-2에 접속 시, 함께 진행할 때는 ssh {Public IP}로 잘 접속되는 걸 봤는데 정작 혼자 할 땐 접속이 되지않았습니다.</description>
    </item>
    
    <item>
      <title>GnuPG 키 백업하기</title>
      <link>https://blog.minseong.xyz/post/how-to-backup-gpg-key-to-personal-media/</link>
      <pubDate>Sat, 27 May 2023 18:29:18 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/how-to-backup-gpg-key-to-personal-media/</guid>
      <description>23/05/30 GPG 키 복원방법 및 출처 추가 망가진 PC 메인보드를 교체하고, 서둘러 GPG key를 백업하였습니다.
용량이 그리 큰편은 아니니, 왠만한 USB 메모리에도 충분히 백업이 가능합니다.
(어째서 안했었을꼬&amp;hellip;)
출처는 마지막 referenece를 참조해주시기 바랍니다.
1. Backup # tree로 ~/.gnupg 확인 tree ~/.gnupg # 현재 사용중인 키 확인 gpg --list-secret-keys --keyid-format LONG # 키 백업 ## public 키 백업 gpg --export --export-options backup --output ~/public_mscho.gpg ## private 키 백업 (암호 입력 필요) gpg --export-secret-keys --export-options backup --output ~/private_mscho.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 5주차 - Autoscaling</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week5/</link>
      <pubDate>Mon, 22 May 2023 19:23:37 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week5/</guid>
      <description>이번 주차는 오토스케일링을 메인으로 하여, 수평/수직 프로비저닝을 학습해보았습니다.
마지막에는 고성능 오토스케일러인 Karpenter를 별도로 실습해보았습니다. 특히..
HPA custom metrics(사용자 정의 메트릭) 적용
YAML 설정값을 CPU로 맞춘 것을 잊고, 프로비저닝을 잘못 예측한 것도 함께 공유합니다.
AutoScaling
HPA: Horizontal Pod Autoscaler VPA: Vertical Pod Autoscaler CA: Cluster Autoscaler 각 CSP 의존적, 워커 노드 레벨에서의 오토스케일링 1. 실습 환경 배포 4주차의 초기 배포 내용에 p8s 및 Grafana를 추가하여 배포 verticalPodAutoscaler 활성화 추천 대시보드: 15757, 17900, 15172 curl -O https://s3.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 4주차 - Observability</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week4/</link>
      <pubDate>Sun, 21 May 2023 06:13:52 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week4/</guid>
      <description>이번 주차에는 Observability에 대해 스터디가 진행되었습니다.
자원 모니터링 툴들의 적용 및 사용이 중심입니다.
그나저나 k8s 1.26에서 metrics의 일부 명칭이 바뀌는 걸 보고 식겁했습니다.
(etcd_db_total_size_bytes 대신, apiserver_storage_db_total_size_in_bytes 으로 변경)
또한 kubecost의 경우, cloudformation 스택 제거 후에도 볼륨 데이터가 남아있어서 별도로 삭제해야 했습니다.
1. 실습환경 배포 NAT게이트웨이, EBS addon, IAM role, ISRA for LB/EFS, PreCommand 포함 노드: t3.xlarge t3a.xlarge(AMD)는 서울 리전 b AZ(ap-northeast-2b)에서 미지원 더 많은 값들이 입력되어서, 생성 완료까지 더 많은 시간이 소요 (약 20여분 이내) curl -O https://s3.</description>
    </item>
    
    <item>
      <title>aws-cli를 이용한 bastion CIDR 변경</title>
      <link>https://blog.minseong.xyz/post/modify-bastion-cidr-with-aws-cli/</link>
      <pubDate>Thu, 18 May 2023 21:36:19 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/modify-bastion-cidr-with-aws-cli/</guid>
      <description>0. 요약 Docs 1 Docs 2 aws ec2 describe-security-groups aws ec2 modify-security-group-rules 1. 배경 2주 전에 문득 이런 질문을 올렸던 적이 있었다.
물론 바꾸면 안될 일은 없었는데 이렇게 하는게 맞나 확신이 모자라서 의견을 여쭤봤었고,
이게 맞다는 확신을 받았다.
그리고 오늘&amp;hellip; 카페를 두 곳이나 들리면서 하느라 약간의 번거로움도 있고 AWS 웹 콘솔에서 하려 했다.
그런데, 유독 SG에서만 페이지 로딩이 timeout 걸려서,
도저히 수정은 커녕 해당 ID도 파악을 하기 힘든 상황이 되었다.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 3주차 - Storage</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week3/</link>
      <pubDate>Fri, 12 May 2023 05:36:38 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week3/</guid>
      <description>이번 주차에는 스토리지에 대해 실습을 진행해보았습니다. 지난번 kOps 스터디에서 다루었던 내용이지만, 부족했던 내용을 보충하면서 작성을 해보았습니다.
주요한 내용은&amp;hellip;
NodeAffinity를 이용한 라벨링 AWS EBS controller의 경우, AWS managed policy를 활용 AWS Volume SnapShots Controller를 통한 볼륨 백업 AWS EFS controller에서의 동적 프로비저닝 AWS EKS 신규 노드그룹 생성 별도로 kube-ops-view의 경우, 웹으로 확인할 수 있을 때까지 시간이 소요된다는 점이 있습니다.
1. 실습 환경 배포 2주차에 실습했던 내용들을 미리 배포 AWS LB ExternalDNS kube-ops-view context 이름 변경 지난 번까지 pkos가 뜨는 현상이 있었는데, 닉네임을 별도 지정할 수 있음 EFS 생성 관련 cloudformation이 추가되었음 EFS FS ID 조회를 하기 위해 aws-cli 필터 활용 (출처: AWS Docs) # 실습 YAML 파일 curl -O https://s3.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 2주차 - Network</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week2/</link>
      <pubDate>Sun, 07 May 2023 07:30:52 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week2/</guid>
      <description># 아쉽게도 신규 항목인 istio, kube-ops-view는 실습 실패 - istio: `myhome.yaml` 을 어떻게 생성할지 몰라서 중단 - kube-ops-view: A레코드에 제대로 잡히지 않음 지난 1주차에 이어, 이번 주에는 EKS의 네트워크 구성에 대해 알아보는 시간이었습니다.
직전 스터디에서도 바로 광탈당하나?하며 밤과 주말을 하얗게 불태웠을 정도로
가장 고난도라고 생각했던 네트워크를 다시 만나니 이제 1% 친근감이 느껴지고 있네요.
자 그럼 해보도록 합시다.
1. cloudformation을 활용한 EKS 원클릭 구성 학습을 위해, 이번에도 가시다님이 준비해주신 원클릭 배포 yaml을 활용하여 배포.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 1주차</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week1/</link>
      <pubDate>Sun, 30 Apr 2023 03:00:15 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week1/</guid>
      <description>최근 CloudNet@에서 진행하고 있는
AWS EKS Workshop Study(이하, AEWS)에 참여하게 되었습니다.
k8s가 워낙 인기가 많기도 하지만, 지난 kOps 스터디를 통해 관리요소가 참 많은 것을 느꼈었고,
좀더 수월하게 이해를 해보고자 AWS 서비스인
EKS(Elastic Kubernetes Service)를 이번 기회에 살펴보기로 했습니다.
EKS 사용에 있어 고려사항 EKS는 관리형 서비스(managed service)이기에 아래와 같은 장점이 있습니다.
클러스터링을 위한 Control Plane(일명, 마스터 노드)을 AWS에서 관리해줍니다. 워커노드는 사용자가 AMI를 구성하여 이를 사용 AWS에서 제공하는 Fargate로 VM을 할당하여 사용 kOps와도 유사하지만, 다른 AWS 서비스와의 연동이 용이합니다.</description>
    </item>
    
    <item>
      <title>GitHub Pages가 고장났나? (Cloudflare 526 Error)</title>
      <link>https://blog.minseong.xyz/post/fix-error-526-in-cloudflare-with-github-page/</link>
      <pubDate>Tue, 28 Mar 2023 18:29:11 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/fix-error-526-in-cloudflare-with-github-page/</guid>
      <description>`gh-pages &amp;amp; Cloudflare DNS` 를 쓰고자 한다면, Cloudflare에서 SSL/TLS 정책을 `Full (Strict)` 대신 `Full`로 하는 쪽이 관리 요소를 줄일 수 있다. Invalid SSL certificate 그간 업무 인계도 있었고, 개인 일정을 소화하면서 블로그 들어갈 일이 없었다.
그러다 지난 주말에 있었던 정기총회에서 만난 분으로부터
블로그에 안 들어가진다는 말을 듣고, 그제서야 인지하게 되었다.
대체 언제부터 이랬던걸까?
GitHub Pages에서 블로그 관리를 하고있었고,
Cloudflare로 Domain Registrar를 이전한 후에
블로그를 올렸기 때문에 한동안 신경을 안 써도 잘 썼는데.</description>
    </item>
    
    <item>
      <title>Ubuntu Pro를 적용하고 사용해보기</title>
      <link>https://blog.minseong.xyz/post/how-to-apply-ubuntu-pro/</link>
      <pubDate>Fri, 17 Mar 2023 11:14:50 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/how-to-apply-ubuntu-pro/</guid>
      <description>튜토리얼 레벨의 게시물입니다. 모든 정보는 https://ubuntu.com/pro/tutorial 에 기초합니다. 기타 초기 구성 중 이슈는 아래도 참고하시기 바랍니다. https://canonical-ubuntu-pro-client.readthedocs-hosted.com/en/latest/index.html 계기 필자가 개인 데스크탑으로 사용하는 Ubuntu 버전이 22.10 (Kinetic Kudu), 23.04 (Lunar Lobster) 이기에, Ubuntu Pro를 적용해볼 기회가 없었다.
이번에 지인 분으로부터 제공받은 엑세스랩(XSLAB)사의 ARM 기반 Vraptor SQ nano를
클린설치하고 나니 Ubuntu 20.04.6 LTS (Focal Fossa) 버전이었기에, Ubuntu Pro를 적용해보기로 했다.
해당 제품은 보라몰/voramall에서도 만나볼 수 있다.
Ubuntu Pro란? Ubuntu Pro는 Ubuntu의 구독 상품으로, 보안 등의 지원 기능을 추가한 서비스로 사전에 보안 취약점을 빠르게 보완해서 데이터를 보호하는게 여러모로 절감되지 않을 까 싶기에 인상 깊었던 프로덕트였다.</description>
    </item>
    
    <item>
      <title>Node.js를 위한 Dockerfile 만들기</title>
      <link>https://blog.minseong.xyz/post/making-dockerfile-for-node/</link>
      <pubDate>Wed, 08 Mar 2023 20:43:43 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/making-dockerfile-for-node/</guid>
      <description>새로 구축한 Dockerfile FROM public.ecr.aws/lts/ubuntu:22.04_stable ENV DEBIAN_FRONTEND=noninteractive # Set Preferred Variables ARG TZ=Asia/Seoul \ NODE_VER=18.x \ UBUNTU_DIST=jammy \ NPM_PKGS=&amp;#34;cross-env pm2&amp;#34; \ ADD_USG=kkumtree \ ADD_USR=kkumtree \ ADD_USR_LANG=C.UTF-8 ARG NODE_REPO=node_${NODE_VER} # Apply essentials RUN set -ex \ &amp;amp;&amp;amp; ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime \ &amp;amp;&amp;amp; apt-get update -y &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 \ &amp;amp;&amp;amp; apt-get install -y --no-install-recommends apt-utils &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 \ &amp;amp;&amp;amp; apt-get install -y --no-install-recommends \ tzdata \ wget curl \ ca-certificates openssl \ lsb-release gnupg \ gcc g++ make \ zip unzip \ vim \ git \ &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 \ &amp;amp;&amp;amp; echo date # Install env for runtime # nodejs RUN set -ex \ &amp;amp;&amp;amp; curl -sLf -o /dev/null \ &amp;#34;https://deb.</description>
    </item>
    
    <item>
      <title>kops로 손쉽게 spot instance 요청하기</title>
      <link>https://blog.minseong.xyz/post/how-to-request-spot-with-kops/</link>
      <pubDate>Mon, 06 Mar 2023 18:43:51 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/how-to-request-spot-with-kops/</guid>
      <description>kops로 충분히 spot instance를 굴릴 수 있지 않을까? 란 생각을 pkos 스터디 내내 하고 있었습니다만,
이미 t3.small 돌렸다가 제대로 노드들이 작동하지도 않았음을 맛봤기 때문에&amp;hellip;
우선순위는 주차별 과제 제출이었기 때문에 이제야 시범 테스트를 해보고, 글을 작성해봅니다. 요약하자면 복습용으로는 충분히 가능하다. 라는 판단입니다. 참고로, 손쉽게 === 야매 의 느낌으로 기술해보았습니다. 글 읽기 귀찮다! 싶으면 여기에서 원글을 확인하실 수 있습니다. 왜 스팟 인스턴스인가? 이미 이전 포스팅의 서두에서 언급한 바 있으나,
아무리 클라우드 서비스가 합리적이어도 On-demand 인스턴스를 학습용으로 사용하기엔 살짝 비효율적이라는 생각이 들었습니다.</description>
    </item>
    
    <item>
      <title>AWS 트러블 슈팅 - 7주 간의 k8s 실무 스터디를 마치며</title>
      <link>https://blog.minseong.xyz/post/basic-aws-troubleshooting/</link>
      <pubDate>Sat, 25 Feb 2023 22:07:23 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/basic-aws-troubleshooting/</guid>
      <description>최근 CloudNet@에서 진행하고 있는 Production Kubernetes Online Study(이하, PKOS)도 마지막 주차가 끝났습니다.
남은 계획은 4월부터 시작되는 휴식기간(a.k.a. 계약만료 후)중 복습 겸, 포스팅을 해보는 것입니다.
오늘은 아래와 같이 실패를 거듭하여 추가로 알게된 소소한 트러블슈팅을 정리해보려고 합니다.
(물론, 새벽에 겨우겨우 주차별 과제 제출하고 기절하는 바람에, 맛점하다 깨닫고 소스라치게 휴대폰으로 수동 삭제한게 비용의 주 요인이긴 하네요;)
불필요한 Try &amp;amp; Fail을 줄이고, 즐거운 k8s 학습되시기 바랍니다.
1. AWS 계정 잠금 해제 상황 처음 1주차 안내가 끝나고 Route53 Hostname을 구매하려고 하니, 자꾸 결제가 실패하는 문제가 발생했습니다.</description>
    </item>
    
    <item>
      <title>Traefik을 활용한 minikube 예제 구현시도 w/Apple Silicon</title>
      <link>https://blog.minseong.xyz/post/traefik-with-minikube-in-m1/</link>
      <pubDate>Sun, 05 Feb 2023 04:54:06 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/traefik-with-minikube-in-m1/</guid>
      <description>주변으로부터 피드백을 받은 내용이 있어 새로운 글로 보완예정입니다. - colima는 containerd처럼 cri가 아닌, Docker engine과 containerd 사이의 물건으로 추정됩니다. - 도커 엔진은 현재 containerd를 통해 프로세스를 관리. - colima도 docker shim 구조는 탈피했을 거라고 추측 중. - 도커 엔진과 containerd 사이의 컨테이너 엔진(관리도구?)로 보임 - colima 시작 시, 특정 런타임을 선택할 수 있습니다. 문서를 잘 읽어봅시다. `colima start --runtime containerd` - k8s를 위한 colima 시작 명령어는 별도로 있습니다. colima github를 참고해주세요.</description>
    </item>
    
  </channel>
</rss>
