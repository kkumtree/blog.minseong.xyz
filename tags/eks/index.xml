<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EKS on kkumtree</title>
    <link>https://blog.minseong.xyz/tags/eks/</link>
    <description>Recent content in EKS on kkumtree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 22 May 2023 19:23:37 +0900</lastBuildDate><atom:link href="https://blog.minseong.xyz/tags/eks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS EKS 스터디 5주차</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week5/</link>
      <pubDate>Mon, 22 May 2023 19:23:37 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week5/</guid>
      <description>이번 주차는 오토스케일링을 메인으로 하여, 수평/수직 프로비저닝을 학습해보았습니다.
마지막에는 고성능 오토스케일러인 Karpenter를 별도로 실습해보았습니다. 특히..
HPA custom metrics(사용자 정의 메트릭) 적용
YAML 설정값을 CPU로 맞춘 것을 잊고, 프로비저닝을 잘못 예측한 것도 함께 공유합니다.
AutoScaling
HPA: Horizontal Pod Autoscaler VPA: Vertical Pod Autoscaler CA: Cluster Autoscaler 각 CSP 의존적, 워커 노드 레벨에서의 오토스케일링 1. 실습 환경 배포 4주차의 초기 배포 내용에 p8s 및 Grafana를 추가하여 배포 verticalPodAutoscaler 활성화 추천 대시보드: 15757, 17900, 15172 curl -O https://s3.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 4주차 - Observability</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week4/</link>
      <pubDate>Sun, 21 May 2023 06:13:52 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week4/</guid>
      <description>이번 주차에는 Observability에 대해 스터디가 진행되었습니다.
자원 모니터링 툴들의 적용 및 사용이 중심입니다.
그나저나 k8s 1.26에서 metrics의 일부 명칭이 바뀌는 걸 보고 식겁했습니다.
(etcd_db_total_size_bytes 대신, apiserver_storage_db_total_size_in_bytes 으로 변경)
또한 kubecost의 경우, cloudformation 스택 제거 후에도 볼륨 데이터가 남아있어서 별도로 삭제해야 했습니다.
1. 실습환경 배포 NAT게이트웨이, EBS addon, IAM role, ISRA for LB/EFS, PreCommand 포함 노드: t3.xlarge t3a.xlarge(AMD)는 서울 리전 b AZ(ap-northeast-2b)에서 미지원 더 많은 값들이 입력되어서, 생성 완료까지 더 많은 시간이 소요 (약 20여분 이내) curl -O https://s3.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 3주차 - Storage</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week3/</link>
      <pubDate>Fri, 12 May 2023 05:36:38 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week3/</guid>
      <description>이번 주차에는 스토리지에 대해 실습을 진행해보았습니다. 지난번 kOps 스터디에서 다루었던 내용이지만, 부족했던 내용을 보충하면서 작성을 해보았습니다.
주요한 내용은&amp;hellip;
NodeAffinity를 이용한 라벨링 AWS EBS controller의 경우, AWS managed policy를 활용 AWS Volume SnapShots Controller를 통한 볼륨 백업 AWS EFS controller에서의 동적 프로비저닝 AWS EKS 신규 노드그룹 생성 별도로 kube-ops-view의 경우, 웹으로 확인할 수 있을 때까지 시간이 소요된다는 점이 있습니다.
1. 실습 환경 배포 2주차에 실습했던 내용들을 미리 배포 AWS LB ExternalDNS kube-ops-view context 이름 변경 지난 번까지 pkos가 뜨는 현상이 있었는데, 닉네임을 별도 지정할 수 있음 EFS 생성 관련 cloudformation이 추가되었음 EFS FS ID 조회를 하기 위해 aws-cli 필터 활용 (출처: AWS Docs) # 실습 YAML 파일 curl -O https://s3.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 2주차 - Network</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week2/</link>
      <pubDate>Sun, 07 May 2023 07:30:52 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week2/</guid>
      <description># 아쉽게도 신규 항목인 istio, kube-ops-view는 실습 실패 - istio: `myhome.yaml` 을 어떻게 생성할지 몰라서 중단 - kube-ops-view: A레코드에 제대로 잡히지 않음 지난 1주차에 이어, 이번 주에는 EKS의 네트워크 구성에 대해 알아보는 시간이었습니다.
직전 스터디에서도 바로 광탈당하나?하며 밤과 주말을 하얗게 불태웠을 정도로
가장 고난도라고 생각했던 네트워크를 다시 만나니 이제 1% 친근감이 느껴지고 있네요.
자 그럼 해보도록 합시다.
1. cloudformation을 활용한 EKS 원클릭 구성 학습을 위해, 이번에도 가시다님이 준비해주신 원클릭 배포 yaml을 활용하여 배포.</description>
    </item>
    
    <item>
      <title>AWS EKS 스터디 1주차</title>
      <link>https://blog.minseong.xyz/post/aws-eks-study-week1/</link>
      <pubDate>Sun, 30 Apr 2023 03:00:15 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/aws-eks-study-week1/</guid>
      <description>최근 CloudNet@에서 진행하고 있는
AWS EKS Workshop Study(이하, AEWS)에 참여하게 되었습니다.
k8s가 워낙 인기가 많기도 하지만, 지난 kOps 스터디를 통해 관리요소가 참 많은 것을 느꼈었고,
좀더 수월하게 이해를 해보고자 AWS 서비스인
EKS(Elastic Kubernetes Service)를 이번 기회에 살펴보기로 했습니다.
EKS 사용에 있어 고려사항 EKS는 관리형 서비스(managed service)이기에 아래와 같은 장점이 있습니다.
클러스터링을 위한 Control Plane(일명, 마스터 노드)을 AWS에서 관리해줍니다. 워커노드는 사용자가 AMI를 구성하여 이를 사용 AWS에서 제공하는 Fargate로 VM을 할당하여 사용 kOps와도 유사하지만, 다른 AWS 서비스와의 연동이 용이합니다.</description>
    </item>
    
  </channel>
</rss>
