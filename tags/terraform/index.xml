<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on kkumtree</title>
    <link>https://blog.minseong.xyz/tags/terraform/</link>
    <description>Recent content in Terraform on kkumtree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Wed, 04 Oct 2023 11:24:13 +0900</lastBuildDate><atom:link href="https://blog.minseong.xyz/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding terraform module</title>
      <link>https://blog.minseong.xyz/post/architecting-aws-with-terraform-module/</link>
      <pubDate>Wed, 04 Oct 2023 11:24:13 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/architecting-aws-with-terraform-module/</guid>
      <description>This week is last week of CloudNet@ group study about terraform.
In this study, my personal goal is making AWS architecture only with terraform and one tfstate file.
Basic knowledge about AWS resources is required. 1. Terraform without Module Before, I already met terraform for maintaining AWS in production level.
But at that time, our team maintain them as folder structure which is used by terraformer
# example structure $ tree .</description>
    </item>
    
    <item>
      <title>Troubleshoot when using terraformer with tfenv</title>
      <link>https://blog.minseong.xyz/post/troubleshoot-terraformer-with-tfenv/</link>
      <pubDate>Sun, 24 Sep 2023 11:47:51 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/troubleshoot-terraformer-with-tfenv/</guid>
      <description>Removing &amp;amp; installing packages are some annoying, isn&amp;rsquo;t it? So, I like using version managers like SDKMAN, nvm, etc..
I also use tfenv for terraform version management.
(prev post: KR/&amp;lsquo;Terraform 시작하기 w/Minimal Ubuntu&amp;rsquo;)
And I recommend neighbors to use terraformer for first learning about terraform.
terraformer is a great terraform generator tool for converting existing cloud infrastructure to terraform code.
In this post, I write how I use terraformer with tfenv.</description>
    </item>
    
    <item>
      <title>IAM STS를 이용한 Terraform Cloud 권한 부여</title>
      <link>https://blog.minseong.xyz/post/terraform-cloud-with-iam-sts/</link>
      <pubDate>Wed, 13 Sep 2023 20:54:28 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/terraform-cloud-with-iam-sts/</guid>
      <description>이번에는 Terraform Cloud가 얼마나 좋은지 더 알아보기 위해,
스터디에서 지속적으로 장점이 강조되어 왔던 Terraform Cloud에
IAM STS를 이용한 권한 부여 도전 및 적용 성공에 대해 써보려고 합니다.
Terraform의 상태 저장을 위해 보통 AWS S3를 사용하는데,
알다시피 S3 기록은 무료지만, 불러오는 것은 유료입니다.
(전기는 국산이지만, 원료는 수입입니다)
그래서 스터디용으로는 Terraform을 불러올 때마다,
상태 값을 S3말고, 로컬에 저장했었는데요.
밖에서는 노트북, 집에서는 데스크탑으로 하려니
이걸 GitHub의 Private Repo에 저장할까? 하다가
Terraform Cloud를 써보기로 했습니다.</description>
    </item>
    
    <item>
      <title>Terraform resource 이해하기 w/AWS VPC</title>
      <link>https://blog.minseong.xyz/post/terraform-basic-resource-concept/</link>
      <pubDate>Fri, 08 Sep 2023 22:41:14 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/terraform-basic-resource-concept/</guid>
      <description>이번에는 CloudNet@를 통해 학습한 내용을 기반으로,
AZ를 대상으로 한 data 조회 AWS VPC 생성 예제로 살펴보는 output resource 이름 변경 순으로 알아보도록 하겠습니다.
교재로 사용한 [테라폼으로 시작하는 IaC] 도 참고하였습니다.
기본 설정 aws-cli에 리전을 ap-northeast-2을 설정하였습니다. $ aws configure list Name Value Type Location ---- ----- ---- -------- profile &amp;lt;not set&amp;gt; None None access_key ****************2U5J shared-credentials-file secret_key ****************Z0co shared-credentials-file region ap-northeast-2 config-file ~/.aws/config 1. data 조회 data는 사용자가 정의하는 resource 및 리소스에 대한 스펙과 반대로,</description>
    </item>
    
    <item>
      <title>Terraform 시작하기 w/Minimal Ubuntu</title>
      <link>https://blog.minseong.xyz/post/terraform-hello-world-tfenv/</link>
      <pubDate>Thu, 31 Aug 2023 22:21:08 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/terraform-hello-world-tfenv/</guid>
      <description>이번에는 CloudNet@에서 진행하는 Terraform 스터디(이하, T101)에 참여했습니다.
Terraform을 쓰면 왜 좋은지는 자세하고 전문적인 글이 있으므로, 참고하시면 좋을 것 같습니다. (링크: 44bits)
예전에 테라폼을 썼던 적이 있지만, Module화가 어렵기도 하고
이번 기회에 테라폼 신간을 다시 복기하는 마음으로 참여했습니다.
사용한 교재는 [테라폼으로 시작하는 IaC] 입니다.
이번에는 Terraform 초기 셋업에 대해, 살펴보고
시험삼아 Canonical 공식 Minimal Ubuntu(ARM64) AMI를 설치해보겠습니다.
Terraform 설치 tfenv 사용과 .tf 작성 따라하기 Hello World in terraform Terraform 써보기 순으로 진행합니다.</description>
    </item>
    
  </channel>
</rss>
