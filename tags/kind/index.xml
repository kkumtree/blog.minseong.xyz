<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kind on kkumtree</title>
    <link>https://blog.minseong.xyz/tags/kind/</link>
    <description>Recent content in kind on kkumtree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 29 Sep 2024 13:35:13 +0900</lastBuildDate><atom:link href="https://blog.minseong.xyz/tags/kind/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iptables monitoring with Grafana (Not Completed)</title>
      <link>https://blog.minseong.xyz/post/kans-4w-iptables-grafana/</link>
      <pubDate>Sun, 29 Sep 2024 13:35:13 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/kans-4w-iptables-grafana/</guid>
      <description>iptables를 수집하여 Grafana로 표현하는 방법을 알아봅니다.
CloudNet@에서 진행하고 있는 K8s Advanced Network Study(이하, KANS)를 통해 학습한 내용을 정리합니다.
0. 환경 구성 (kind) 작성시간 이슈로 featureGates, ConfigPatches, networking 설정 설명은 스킵&amp;hellip;합니다.
a. 1 Master, 3 Slave 환경 구성 cat &amp;lt;&amp;lt;EOT&amp;gt; kind-svc-1w.yaml kind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 featureGates: &amp;#34;InPlacePodVerticalScaling&amp;#34;: true &amp;#34;MultiCIDRServiceAllocator&amp;#34;: true nodes: - role: control-plane labels: mynode: control-plane topology.kubernetes.io/zone: ap-northeast-2a extraPortMappings: - containerPort: 30000 hostPort: 30000 - containerPort: 30001 hostPort: 30001 - containerPort: 30002 hostPort: 30002 kubeadmConfigPatches: - | kind: ClusterConfiguration apiServer: extraArgs: runtime-config: api/all=true controllerManager: extraArgs: bind-address: 0.</description>
    </item>
    
    <item>
      <title>KIND 톺아보기</title>
      <link>https://blog.minseong.xyz/post/kans-2w-kind-overview/</link>
      <pubDate>Tue, 03 Sep 2024 21:16:07 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/kans-2w-kind-overview/</guid>
      <description>톺아보다(우리말샘) 는 의외로 표준어라고 합니다.
KIND 설치 이후에 기본적인 내용을 살펴봅니다.
CloudNet@에서 진행하고 있는 K8s Advanced Network Study(이하, KANS)를 통해 학습한 내용을 정리합니다.
0. $KUBECONFIG $KUBECONFIG 환경변수가 없을 경우:
보통은 ~/.kube 디렉토리가 생성됩니다.
확인해보니, config 값과 더불어, cache 디렉토리도 확인할 수 있었습니다.
❯ find ~/.kube -maxdepth 2 -type f -exec ls -ld &amp;#34;{}&amp;#34; \; -rw------- 1 kkumtree kkumtree 44 Sep 3 21:31 /home/kkumtree/.kube/config ❯ find ~/.kube -maxdepth 2 -type d -exec ls -ld &amp;#34;{}&amp;#34; \; drwxr-x--- 3 kkumtree kkumtree 4096 Sep 3 21:31 /home/kkumtree/.</description>
    </item>
    
    <item>
      <title>리눅스에 KIND 설치하기 w/golang</title>
      <link>https://blog.minseong.xyz/post/kans-2w-kind-installation-on-linux/</link>
      <pubDate>Mon, 02 Sep 2024 00:33:19 +0900</pubDate>
      
      <guid>https://blog.minseong.xyz/post/kans-2w-kind-installation-on-linux/</guid>
      <description>Helm 설치 추가
CloudNet@에서 진행하고 있는 K8s Advanced Network Study(이하, KANS)에 참여하게 되면서 기록을 남기고 있습니다.
이번에는 kind(Kubernetes IN Docker)를 Golang을 통해 설치하면서 약간의 소?란이 있었던 부분만 다룹니다.
1. KIND란? 아래 사진으로 대체합니다. 자세한 내용은 Docs/Initial_design에서 볼수 있습니다. 2. KIND 설치하기 Docs/Quick-start를 참고합니다. Linux의 경우, 패키지 관리자 설치가 없어 바이너리, 혹은 소스로 설치해야 합니다.
아래 두 문장에 뭔가 발동하여 Go 언어로 설치를 해보기로 했습니다.
If you are a go developer you may find the go install option convenient.</description>
    </item>
    
  </channel>
</rss>
